homeassistant:
  customize:
    sensor.manual_climates_count:
      friendly_name: "Climate entities in manual mode"

group:
  managed_climates:
    name: "Managed climate entities"
    icon: "mdi:thermostat-box"
    entities: &managed_climates
      - "climate.heat_pump"
      - "climate.basement_hallway_thermostat"
      - "climate.dining_room_thermostat"
      - "climate.guest_bedroom_thermostat"
      - "climate.living_room_thermostat"
      - "climate.lounge_thermostat"
      - "climate.master_bedroom_thermostat"
      - "climate.office_thermostat"
      - "climate.studio_thermostat"

  managed_climate_modes:
    name: "Managed climate modes"
    icon: "mdi:home-thermometer"
    entities: &managed_climate_modes
      - "input_select.heat_pump_mode"
      - "input_select.basement_hallway_thermostat_mode"
      - "input_select.dining_room_thermostat_mode"
      - "input_select.guest_bedroom_thermostat_mode"
      - "input_select.living_room_thermostat_mode"
      - "input_select.lounge_thermostat_mode"
      - "input_select.master_bedroom_thermostat_mode"
      - "input_select.office_thermostat_mode"
      - "input_select.studio_thermostat_mode"

  managed_climate_auto_modes:
    name: "Managed climate auto modes"
    icon: "mdi:home-thermometer"
    entities: &managed_climate_auto_modes
      - "input_select.heat_pump_auto_mode"
      - "input_select.basement_hallway_thermostat_auto_mode"
      - "input_select.dining_room_thermostat_auto_mode"
      - "input_select.guest_bedroom_thermostat_auto_mode"
      - "input_select.living_room_thermostat_auto_mode"
      - "input_select.lounge_thermostat_auto_mode"
      - "input_select.master_bedroom_thermostat_auto_mode"
      - "input_select.office_thermostat_auto_mode"
      - "input_select.studio_thermostat_auto_mode"

  managed_climate_eco_setpoints:
    name: "Managed climate eco setpoints"
    icon: "mdi:thermometer-lines"
    entities: &managed_climate_eco_setpoints
      - "input_number.heat_pump_eco_setpoint"
      - "input_number.basement_hallway_thermostat_eco_setpoint"
      - "input_number.dining_room_thermostat_eco_setpoint"
      - "input_number.guest_bedroom_thermostat_eco_setpoint"
      - "input_number.living_room_thermostat_eco_setpoint"
      - "input_number.lounge_thermostat_eco_setpoint"
      - "input_number.master_bedroom_thermostat_eco_setpoint"
      - "input_number.office_thermostat_eco_setpoint"
      - "input_number.studio_thermostat_eco_setpoint"

  managed_climate_comfort_setpoints:
    name: "Managed climate comfort setpoints"
    icon: "mdi:thermometer-lines"
    entities: &managed_climate_comfort_setpoints
      - "input_number.heat_pump_comfort_setpoint"
      - "input_number.basement_hallway_thermostat_comfort_setpoint"
      - "input_number.dining_room_thermostat_comfort_setpoint"
      - "input_number.guest_bedroom_thermostat_comfort_setpoint"
      - "input_number.living_room_thermostat_comfort_setpoint"
      - "input_number.lounge_thermostat_comfort_setpoint"
      - "input_number.master_bedroom_thermostat_comfort_setpoint"
      - "input_number.office_thermostat_comfort_setpoint"
      - "input_number.studio_thermostat_comfort_setpoint"

input_datetime:
  climate_manual_mode_timer:
    name: Climate manual mode timer
    icon: mdi:thermometer-auto
    has_date: false
    has_time: true

template:
  - sensor:
      - unique_id: "sensor.manual_thermostats_count"
        name: "manual_climates_count"
        icon: "mdi:thermometer-alert"
        state: "{{ this.attributes.entity_id | default([]) | length }}"
        attributes:
          entity_id: |
            {{
              expand('group.managed_climate_modes')
                | selectattr('state', 'eq', 'Manual')
                | map('attr', 'entity_id')
                | list
            }}

script:
  restore_climate_auto_mode:
    alias: "restore_climate_auto_mode"
    description: "Restore auto mode on all climate entities"
    icon: "mdi:thermometer-alert"
    mode: "queued"
    max_exceeded: "silent"
    sequence:
      - action: input_select.select_option
        target:
          entity_id: "{{ expand('group.managed_climate_modes') | map(attribute = 'entity_id') | list }}"
        data:
          option: "Auto"

automation:
  - alias: "select_manual_climate_mode"
    id: "a8b031db-937a-4b34-bd64-a30f51900ed0"
    description: "Flag climate entity to manual mode when the managed temperature differs from the actual temperature."
    initial_state: true
    mode: "parallel"
    max: 9

    triggers:
      - trigger: state
        entity_id: *managed_climates
        attribute: "temperature"
        not_to: "unavailable"
        for: 5

    variables:
      <<: &climate_variables
        name: >-
          {{
            trigger.to_state.object_id
              | replace('_auto_mode', '')
              | replace('_mode', '')
              | replace('_comfort_setpoint', '')
              | replace('_eco_setpoint', '')
          }}
        auto_mode: "{{ states('input_select.{}_auto_mode'.format(name)) | default('Eco') }}"
        mode: "{{ states('input_select.{}_mode'.format(name)) | default('Auto') }}"
        target_setpoint: "{{ states('input_number.{}_{}_setpoint'.format(name, auto_mode | lower)) | default | float(0) }}"
      current_setpoint: "{{ trigger.to_state.attributes.temperature | default | float(0) }}"

    conditions: "{{ trigger.to_state.attributes.preset_mode | default('none') != 'none' or target_setpoint != current_setpoint }}"

    actions:
      - action: "input_select.select_option"
        target:
          entity_id: "input_select.{{ name }}_mode"
        data:
          option: "Manual"

  - alias: "update_climate_setpoint"
    id: "0954c8e4-8429-4777-a8ba-4a1c99853ea2"
    description: "Update climate setpoint"
    initial_state: true
    mode: "queued"
    max: 10

    triggers:
      - trigger: state
        entity_id: *managed_climate_modes
        to: "Auto"
      - trigger: state
        entity_id: *managed_climate_auto_modes
        to: ~
      - trigger: state
        entity_id: *managed_climate_comfort_setpoints
        to: ~
        for: 5
      - trigger: state
        entity_id: *managed_climate_eco_setpoints
        to: ~
        for: 5

    variables:
      <<: *climate_variables
      current_setpoint: "{{ state_attr('climate.{}'.format(name), 'temperature') | default | float(0) }}"

    conditions: "{{ mode == 'Auto' and target_setpoint != current_setpoint }}"

    actions:
      - action: "climate.set_temperature"
        target:
          entity_id: "climate.{{ name }}"
        data:
          temperature: "{{ target_setpoint }}"

  - alias: "start_manual_climate_reset_timer"
    id: "330d72c1-954a-4d1e-a3e1-47412d134dc5"
    description: "Start the timer to reset climate modes to auto (managed) after it has been on manual for some time."
    mode: "parallel"
    max: 15
    triggers:
      - trigger: "state"
        entity_id: *managed_climate_modes
        not_to: "Auto"
    actions:
      - action: timer.start
        target:
          entity_id: "timer.{{ trigger.to_state.object_id | replace('_mode', '_manual_mode_reset') }}"
        data:
          duration: "{{ states('input_datetime.climate_manual_mode_timer') }}"

  - alias: "revert_manual_climate_mode"
    id: "5c387ec4-b18b-4ec6-9174-8d844e7e88e9"
    description: "Reset climate mode to auto (managed) when the timer for manual time is elapsed."
    mode: "parallel"
    max: 15
    triggers:
      - trigger: "state"
        entity_id: &all_manual_reset_timers
          - "timer.heat_pump_manual_mode_reset"
          - "timer.basement_hallway_thermostat_manual_mode_reset"
          - "timer.dining_room_thermostat_manual_mode_reset"
          - "timer.guest_bedroom_thermostat_manual_mode_reset"
          - "timer.living_room_thermostat_manual_mode_reset"
          - "timer.lounge_thermostat_manual_mode_reset"
          - "timer.master_bedroom_thermostat_manual_mode_reset"
          - "timer.office_thermostat_manual_mode_reset"
          - "timer.studio_thermostat_manual_mode_reset"
        from: "active"
        to: "idle"
    conditions:
      - condition: "state"
        entity_id: "input_boolean.climate_scheduling_enabled"
        state: "on"
    actions:
      - action: "input_select.select_option"
        target:
          entity_id: "input_select.{{ trigger.to_state.object_id | replace('_manual_mode_reset', '_mode') }}"
        data:
          option: "Auto"

  - alias: "revert_all_expired_manual_climate_mode"
    id: "2e58b9fa-1838-4c38-8b4a-d38b43c76105"
    description: "Reset climate mode to auto (managed) when the timer for manual time is elapsed."
    mode: "single"
    triggers:
      - trigger: "homeassistant"
        event: "start"
      - trigger: "state"
        entity_id: "input_boolean.climate_scheduling_enabled"
        from: "off"
        to: "on"
    actions:
      repeat:
        for_each: *all_manual_reset_timers
        sequence:
          - if: "{{ is_state(repeat.item, 'idle') }}"
            then:
              - action: "input_select.select_option"
                target:
                  entity_id: "input_select.{{ states[repeat.item].object_id | replace('_manual_mode_reset', '_mode') }}"
                data:
                  option: "Auto"

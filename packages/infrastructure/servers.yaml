homeassistant:
  customize:
    sensor.media_cpu_used:
      friendly_name: "Media's CPU use"
      icon: "mdi:chip"
    sensor.media_cpu_temp:
      friendly_name: "Media's CPU temperature"
      icon: "mdi:fire"
    sensor.media_ram_used_percent:
      friendly_name: "Media's memory use"
      icon: "mdi:memory"
    sensor.relay_south_cpu_used:
      friendly_name: "South relay's CPU use"
      icon: "mdi:chip"
    sensor.relay_south_cpu_temp:
      friendly_name: "South relay's CPU temperature"
      icon: "mdi:fire"
    sensor.relay_south_ram_used_percent:
      friendly_name: "South relay's memory use"
      icon: "mdi:memory"
    sensor.relay_north_cpu_used:
      friendly_name: "North relay's CPU use"
      icon: "mdi:chip"
    sensor.relay_north_cpu_temp:
      friendly_name: "North relay's CPU temperature"
      icon: "mdi:fire"
    sensor.relay_north_ram_used_percent:
      friendly_name: "North relay's memory use"
      icon: "mdi:memory"

input_boolean:
  notify_server_outages:
    name: "Notify server outages"
    icon: "mdi:message-cog"

glances:
  - host: !secret media_glances_host
    port: !secret media_glances_port
    name: "media"
    version: 3
  - host: !secret relay_south_glances_host
    port: !secret relay_south_glances_port
    name: "relay_south"
    version: 3
  - host: !secret relay_north_glances_host
    port: !secret relay_north_glances_port
    name: "relay_north"
    version: 3

shell_command:
  turn_off_server: >-
    /usr/bin/ssh -F /config/.secrets/ssh_config {{ server_key }} "sudo poweroff"
  wake_on_lan: >-
    /usr/bin/ssh -F /config/.secrets/ssh_config router "/usr/sbin/wol -p 9 -i '{{ broadcast }}' '{{ mac }}'"

switch:
  - platform: template
    switches:
      network_media:
        unique_id: "switch.network_media"
        friendly_name: "Media"
        value_template: "{{ is_state('device_tracker.avatar_media', 'home') }}"
        icon_template: "mdi:server-network{% if not is_state('device_tracker.avatar_media', 'home') %}-off{% endif %}"
        turn_on:
          service: "shell_command.wake_on_lan"
          data:
            broadcast: !secret network_broadcast
            mac: !secret media_mac
        turn_off:
          service: "shell_command.turn_off_server"
          data:
            server_key: "media"

      network_relay_north:
        unique_id: "switch.network_relay_north"
        friendly_name: "Relay North"
        value_template: "{{ is_state('device_tracker.avatar_relay_north', 'home') }}"
        icon_template: "mdi:server-network{% if not is_state('device_tracker.avatar_relay_north', 'home') %}-off{% endif %}"
        turn_on:
          service: "shell_command.wake_on_lan"
          data:
            broadcast: !secret network_broadcast
            mac: !secret relay_north_mac
        turn_off:
          service: "shell_command.turn_off_server"
          data:
            server_key: "relay_north"

      network_relay_south:
        unique_id: "switch.network_relay_south"
        friendly_name: "Relay South"
        value_template: "{{ is_state('device_tracker.avatar_relay_south', 'home') }}"
        icon_template: "mdi:server-network{% if not is_state('device_tracker.avatar_relay_south', 'home') %}-off{% endif %}"
        turn_on:
          service: "shell_command.wake_on_lan"
          data:
            broadcast: !secret network_broadcast
            mac: !secret relay_south_mac
        turn_off:
          service: "shell_command.turn_off_server"
          data:
            server_key: "relay_south"

automation:
  - alias: notify_new_network_device
    initial_state: true
    mode: "parallel"
    trigger:
      platform: event
      event_type: "device_tracker_new_device"
    action:
      - service: python_script.notify
        data:
          push_target: "admin"
          persistent: true
          title: "New device detected on network"
          message: "Device data: {{ trigger.event.data | tojson }}"

  - alias: notify_server_state_change
    initial_state: true
    mode: "parallel"
    trigger:
      - platform: state
        entity_id:
          - switch.network_media
          - switch.network_relay_south
          - switch.network_relay_north
        for: &server_outage_leeway 45
    condition:
      - condition: state
        entity_id: "input_boolean.notify_server_outages"
        state: "on"
    action:
      - variables:
          # Normalize state to only on/off
          state: "{% if trigger.to_state.state == 'on' %}on{% else %}off{% endif %}"
      - service: python_script.notify
        data:
          push_target: "admin"
          tag: "server_{{ trigger.to_state.object_id }}"
          url: "/lovelace/network"
          title: "{{ trigger.to_state.name }} server is {{ state }}line"
          push_data:
            entity_id: "{{ trigger.entity_id }}"
          push_actions:
            - action: "power_{{ state }}_server"
              title: "Power {{ state }}"
              icon: "/local/icons/power-plug-{{ state }}.png"

  - alias: power_on_server
    initial_state: true
    mode: "parallel"
    trigger:
      - platform: event
        event_type: "html5_notification.clicked"
        event_data:
          action: &power_on_action_key power_on_server
      - platform: event
        event_type: "mobile_app_notification_action"
        event_data:
          action: *power_on_action_key
    action:
      - service: switch.turn_on
        data:
          entity_id: "{{ trigger.event.data.data.entity_id }}"

  - alias: power_off_server
    initial_state: true
    mode: "parallel"
    trigger:
      - platform: event
        event_type: "html5_notification.clicked"
        event_data:
          action: &power_off_action_key power_off_server
      - platform: event
        event_type: "mobile_app_notification_action"
        event_data:
          action: *power_off_action_key
    action:
      - service: switch.turn_off
        data:
          entity_id: "{{ trigger.event.data.data.entity_id }}"

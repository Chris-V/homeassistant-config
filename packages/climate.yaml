group:
  all_thermostat_modes:
    name: "Thermostat modes"
    icon: "mdi:home-temperature"
    entities: &thermostat_modes
      - input_select.basement_bathroom_thermostat_mode
      - input_select.basement_hallway_thermostat_mode
      - input_select.dining_room_thermostat_mode
      - input_select.guest_bedroom_thermostat_mode
      - input_select.living_room_thermostat_mode
      - input_select.lounge_thermostat_mode
      - input_select.master_bedroom_thermostat_mode
      - input_select.office_thermostat_mode
      - input_select.studio_thermostat_mode

sensor:
  - platform: template
    sensors:
      climate_preset:
        friendly_name: "Scheduled climate preset"
        icon_template: "mdi:thermometer-lines"
        entity_id:
          - sensor.time
          - group.household
        value_template: |
          {% if is_state('group.household', 'home')
              and 30 < as_timestamp(states.sensor.time.last_changed) - as_timestamp(states.group.household.last_changed -%}
            {% set schedule = [
              [{"time": 0, "preset": "Sleep"}, {"time": 730, "preset": "Active"}, {"time": 2300, "preset": "Bedtime"}],
              [{"time": 0, "preset": "Sleep"}, {"time": 730, "preset": "Active"}, {"time": 2300, "preset": "Bedtime"}],
              [{"time": 0, "preset": "Sleep"}, {"time": 730, "preset": "Active"}, {"time": 2300, "preset": "Bedtime"}],
              [{"time": 0, "preset": "Sleep"}, {"time": 730, "preset": "Active"}, {"time": 2300, "preset": "Bedtime"}],
              [{"time": 0, "preset": "Sleep"}, {"time": 730, "preset": "Active"}, {"time": 2300, "preset": "Bedtime"}],
              [{"time": 0, "preset": "Sleep"}, {"time": 730, "preset": "Active"}, {"time": 2330, "preset": "Bedtime"}],
              [{"time": 100, "preset": "Sleep"}, {"time": 830, "preset": "Active"}, {"time": 2300, "preset": "Bedtime"}],
            ] %}

            {% set day_index = now().weekday() %}
            {% set time_index = states("sensor.time") | replace(":", "") | int %}
            {% set days = (range(day_index + 1, 7) | list + range(0, day_index) | list) | reverse | list %}

            {% set match = namespace(
              day = day_index,
              preset = schedule[day_index] | rejectattr("time", ">", time_index) | map(attribute = "preset") | list | last
            ) %}

            {% for day in days if match.preset is not defined %}
            {% set match.day = day %}
            {% set match.preset = schedule[day] | map(attribute = "preset") | list | last %}
            {% endfor %}

            {{ match.preset | default('Away') }}
          {%- else -%}
            Away
          {%- endif %}

      manual_thermostats_count:
        friendly_name: "Thermostats in manual mode"
        icon_template: "mdi:thermometer-alert"
        entity_id: *thermostat_modes
        value_template: |
          {{
            expand('group.all_thermostat_modes')
              | selectattr('state', 'eq', 'Manual')
              | list
              | count
          }}
        attribute_templates:
          entities: |
            {{
              expand('group.all_thermostat_modes')
                | selectattr('state', 'eq', 'Manual')
                | map('attr', 'entity_id')
                | join(', ')
                | default('None', True)
            }}

script:
  active_climate_preset:
    alias: "Active climate preset"
    icon: "mdi:thermometer-lines"
    sequence:
      - service: scene.apply
        data_template:
          entities:
            input_select.basement_bathroom_thermostat_auto_mode: "Comfort"
            input_select.basement_hallway_thermostat_auto_mode: "Comfort"
            input_select.dining_room_thermostat_auto_mode: "Comfort"
            input_select.guest_bedroom_thermostat_auto_mode: "Comfort"
            input_select.living_room_thermostat_auto_mode: "Comfort"
            input_select.lounge_thermostat_auto_mode: "Comfort"
            input_select.master_bedroom_thermostat_auto_mode: "Comfort"
            input_select.office_thermostat_auto_mode: "Comfort"
            input_select.studio_thermostat_auto_mode: "Comfort"

  away_climate_preset:
    alias: "Away climate preset"
    icon: "mdi:thermometer-lines"
    sequence:
      - service: scene.apply
        data_template:
          entities:
            input_select.basement_bathroom_thermostat_auto_mode: "Eco"
            input_select.basement_hallway_thermostat_auto_mode: "Eco"
            input_select.dining_room_thermostat_auto_mode: "Eco"
            input_select.guest_bedroom_thermostat_auto_mode: "Eco"
            input_select.living_room_thermostat_auto_mode: "Eco"
            input_select.lounge_thermostat_auto_mode: "Eco"
            input_select.master_bedroom_thermostat_auto_mode: "Eco"
            input_select.office_thermostat_auto_mode: "Eco"
            input_select.studio_thermostat_auto_mode: "Eco"

  bedtime_climate_preset:
    alias: "Bedtime climate preset"
    icon: "mdi:thermometer-lines"
    sequence:
      - service: scene.apply
        data_template:
          entities:
            input_select.basement_bathroom_thermostat_auto_mode: "Eco"
            input_select.basement_hallway_thermostat_auto_mode: "Eco"
            input_select.dining_room_thermostat_auto_mode: "Eco"
            input_select.guest_bedroom_thermostat_auto_mode: "Eco"
            input_select.living_room_thermostat_auto_mode: "Eco"
            input_select.lounge_thermostat_auto_mode: "Eco"
            input_select.master_bedroom_thermostat_auto_mode: "Comfort"
            input_select.office_thermostat_auto_mode: "Eco"
            input_select.studio_thermostat_auto_mode: "Eco"

  sleep_climate_preset:
    alias: "Sleep climate preset"
    icon: "mdi:thermometer-lines"
    sequence:
      - service: scene.apply
        data_template:
          entities:
            input_select.basement_bathroom_thermostat_auto_mode: "Eco"
            input_select.basement_hallway_thermostat_auto_mode: "Eco"
            input_select.dining_room_thermostat_auto_mode: "Eco"
            input_select.guest_bedroom_thermostat_auto_mode: "Eco"
            input_select.living_room_thermostat_auto_mode: "Eco"
            input_select.lounge_thermostat_auto_mode: "Eco"
            input_select.master_bedroom_thermostat_auto_mode: "Eco"
            input_select.office_thermostat_auto_mode: "Eco"
            input_select.studio_thermostat_auto_mode: "Eco"

  scheduled_climate_preset:
    alias: "Scheduled climate preset"
    icon: "mdi:thermometer-lines"
    sequence:
      - service_template: "script.{{ states('sensor.climate_preset') | lower }}_climate_preset"

  restore_climate_auto_mode:
    alias: "Restore auto mode on all thermostats"
    icon: "mdi:thermometer-alert"
    sequence:
      - service: input_select.select_option
        data_template:
          entity_id: *thermostat_modes
          option: "Auto"

automation:
  - alias: apply_scheduled_climate_preset
    initial_state: True
    trigger:
      - platform: state
        entity_id: "sensor.climate_preset"
    action:
      - service: script.scheduled_climate_preset

  - alias: "revert_manual_thermostat_mode"
    initial_state: True
    trigger:
      - platform: state
        entity_id: *thermostat_modes
        to: "Manual"
        for: "01:00:00"
    action:
      - service: input_select.select_option
        data_template:
          entity_id: "{{ trigger.to_state.entity_id }}"
          option: "Auto"

  - alias: "update_thermostat_setpoint"
    initial_state: True
    trigger:
      - platform: state
        entity_id: *thermostat_modes
        to: "Auto"
      - platform: state
        entity_id:
          - input_select.basement_bathroom_thermostat_auto_mode
          - input_select.basement_hallway_thermostat_auto_mode
          - input_select.dining_room_thermostat_auto_mode
          - input_select.guest_bedroom_thermostat_auto_mode
          - input_select.living_room_thermostat_auto_mode
          - input_select.lounge_thermostat_auto_mode
          - input_select.master_bedroom_thermostat_auto_mode
          - input_select.office_thermostat_auto_mode
          - input_select.studio_thermostat_auto_mode
      - platform: state
        entity_id:
          - input_number.basement_bathroom_thermostat_comfort_setpoint
          - input_number.basement_hallway_thermostat_comfort_setpoint
          - input_number.dining_room_thermostat_comfort_setpoint
          - input_number.guest_bedroom_thermostat_comfort_setpoint
          - input_number.living_room_thermostat_comfort_setpoint
          - input_number.lounge_thermostat_comfort_setpoint
          - input_number.master_bedroom_thermostat_comfort_setpoint
          - input_number.office_thermostat_comfort_setpoint
          - input_number.studio_thermostat_comfort_setpoint
      - platform: state
        entity_id:
          - input_number.basement_bathroom_thermostat_eco_setpoint
          - input_number.basement_hallway_thermostat_eco_setpoint
          - input_number.dining_room_thermostat_eco_setpoint
          - input_number.guest_bedroom_thermostat_eco_setpoint
          - input_number.living_room_thermostat_eco_setpoint
          - input_number.lounge_thermostat_eco_setpoint
          - input_number.master_bedroom_thermostat_eco_setpoint
          - input_number.office_thermostat_eco_setpoint
          - input_number.studio_thermostat_eco_setpoint
    condition:
      - condition: template
        value_template: |
          {% set area_prefix = trigger.to_state.object_id
              | replace('_thermostat_mode', '')
              | replace('_thermostat_auto_mode', '')
              | replace('_thermostat_eco_setpoint', '')
              | replace('_thermostat_comfort_setpoint', '') %}
          {% set mode = states('input_select.' ~ area_prefix ~ '_thermostat_auto_mode') | default('eco') | lower %}
          {% set planned_setpoint = states('input_number.' ~ area_prefix ~ '_' ~ mode ~ '_setpoint') | float %}
          {{ is_state('input_select.' ~ area_prefix ~ '_thermostat_mode', 'Auto')
              and planned_setpoint != state_attr('climate.' ~ area_prefix ~ '_thermostat', 'temperature') | float }}
    action:
      - service: "climate.set_temperature"
        data_template:
          entity_id: |
            {% set area_prefix = trigger.to_state.object_id
                | replace('_thermostat_mode', '')
                | replace('_thermostat_auto_mode', '')
                | replace('_thermostat_eco_setpoint', '')
                | replace('_thermostat_comfort_setpoint', '') %}
            climate.{{ area_prefix }}_thermostat
          temperature: |
            {% set area_prefix = trigger.to_state.object_id
                | replace('_thermostat_mode', '')
                | replace('_thermostat_auto_mode', '')
                | replace('_thermostat_eco_setpoint', '')
                | replace('_thermostat_comfort_setpoint', '') %}
            {% set mode = states('input_select.' ~ area_prefix ~ '_thermostat_auto_mode') | default('eco') | lower %}
            {{ states('input_number.' ~ area_prefix ~ '_thermostat_' ~ mode ~ '_setpoint') }}

  - alias: "select_manual_thermostat_mode"
    initial_state: True
    trigger:
      - platform: state
        entity_id:
          - climate.basement_bathroom_thermostat
          - climate.basement_hallway_thermostat
          - climate.dining_room_thermostat
          - climate.guest_bedroom_thermostat
          - climate.living_room_thermostat
          - climate.lounge_thermostat
          - climate.master_bedroom_thermostat
          - climate.office_thermostat
          - climate.studio_thermostat
    condition:
      - condition: template
        value_template: >
          {{
            trigger.from_state is undefined
              or trigger.from_state.attributes.temperature != trigger.to_state.attributes.temperature
          }}
    action:
      - delay: "00:00:05"
      - condition: template
        value_template: |
          {% set prefix = trigger.to_state.object_id %}
          {% set mode = states('input_select.' ~ prefix ~ '_auto_mode') | default('eco') | lower %}
          {% set planned_setpoint = states('input_number.' ~ prefix ~ '_' ~ mode ~ '_setpoint') | float %}
          {{ trigger.to_state.attributes.preset_mode != 'none'
              or planned_setpoint != trigger.to_state.attributes.temperature | float }}
      - service: "input_select.select_option"
        data_template:
          entity_id: "input_select.{{ trigger.to_state.object_id }}_mode"
          option: "Manual"

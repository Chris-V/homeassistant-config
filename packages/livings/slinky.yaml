homeassistant:
  customize:
    switch.slinky_heat_bulb:
      icon: "mdi:spotlight-beam"
    switch.slinky_heater:
      icon: "mdi:radiator"
    switch.slinky_uv_light:
      icon: "mdi:weather-sunny"
    switch.slinky_outlet_4:
      icon: "mdi:power-socket-us"
    switch.slinky_outlet_5:
      icon: "mdi:chip"

input_boolean:
  slinky_scheduled_lights:
    name: "Automate Slinky's terrarium"
    icon: "mdi:home-automation"

input_datetime:
  slinky_day_time:
    name: Time at which Slinky's terrarium lights turn on
    has_date: false
    has_time: true
  slinky_night_time:
    name: Time at which Slinky's terrarium lights turn off
    has_date: false
    has_time: true

template:
  binary_sensor:
    - unique_id: "binary_sensor.slinky_requires_attention"
      name: "slinky_requires_attention"
      device_class: "problem"
      picture: "/local/animals/slinky_avatar.jpg"
      attributes:
        friendly_name: "Slinky requires attention"
        scheduling: "{{ is_state('input_boolean.slinky_scheduled_lights', 'on') }}"
        heat_bulb: "{{ is_state('switch.slinky_heat_bulb', 'off') or states('sensor.slinky_heat_bulb_power') | float > 1 }}"
        heater: "{{ is_state('switch.slinky_heater', 'off') or states('sensor.slinky_heater_power') | float > 1 }}"
        uv_light: "{{ is_state('switch.slinky_uv_light', 'off') or states('sensor.slinky_uv_light_power') | float > 1 }}"
      state: >-
        {{ is_state('input_boolean.slinky_scheduled_lights', 'off')
            or (is_state('switch.slinky_heat_bulb', 'on') and states('sensor.slinky_heat_bulb_power') | float < 1)
            or (is_state('switch.slinky_heater', 'on') and states('sensor.slinky_heater_power') | float < 1)
            or (is_state('switch.slinky_uv_light', 'on') and states('sensor.slinky_uv_light_power') | float < 1)
        }}

  sensor:  # Fake sensors until everything is ready
    - unique_id: "sensor.slinky_basking_temperature"
      name: "slinky_basking_temperature"
      device_class: "temperature"
      unit_of_measurement: "°C"
      state: "0.0"
      attributes:
        friendly_name: "Slinky's basking spot temperature"
    - unique_id: "sensor.slinky_temperature"
      name: "slinky_temperature"
      device_class: "temperature"
      unit_of_measurement: "°C"
      state: "0.0"
      attributes:
        friendly_name: "Slinky's terrarium temperature"
    - unique_id: "sensor.slinky_humidity"
      name: "slinky_humidity"
      device_class: "humidity"
      unit_of_measurement: "%"
      state: "0.0"
      attributes:
        friendly_name: "Slinky's terrarium humidity"

automation:
  - id: "ca115276-80d4-4a82-bd6e-b575f6483b64"
    alias: slinky_scheduling
    use_blueprint:
      path: "terrarium_scheduling.yaml"
      input:
        scheduling_entity: "input_boolean.slinky_scheduled_lights"
        day_time_entity: "input_datetime.slinky_day_time"
        night_time_entity: "input_datetime.slinky_night_time"
        heat_bulb_switch: "switch.slinky_heat_bulb"
        heater_switch: "switch.slinky_heater"
        uv_light_switch: "switch.slinky_uv_light"

  - id: "bb248f37-e829-45dc-99f3-f21bf86dea5c"
    alias: slinky_uv_burned_out
    use_blueprint:
      path: "device_stopped_consuming.yaml"
      input:
        delay: &power_delay 310  # Wattage report rate is 5 minutes
        entity_id: "switch.slinky_uv_light"
        power_sensor: "sensor.slinky_uv_light_power"
        action:
          - service: python_script.notify
            data:
              <<: &power_notification_data
                audio: true
                persistent: true
                push_target: "household"
                url: "/lovelace/livings"
              tag: "slinky_uv_burned_out"
              title: "Check Slinky's UV Light"
              message: "It appears that Slinky's UV light has burned out."

  - id: "99bb793a-f44c-4f8a-99e4-079c59056d51"
    alias: slinky_heat_bulb_burned_out
    use_blueprint:
      path: "device_stopped_consuming.yaml"
      input:
        delay: *power_delay
        entity_id: "switch.slinky_heat_bulb"
        power_sensor: "sensor.slinky_heat_bulb_power"
        action:
          - service: python_script.notify
            data:
              <<: *power_notification_data
              tag: "slinky_heat_bulb_burned_out"
              title: "Check Slinky's Heat Bulb"
              message: "It appears that Slinky's heat bulb has burned out."

  - id: "97c82da0-9eed-462c-a2d5-46da5209ffb3"
    alias: slinky_heater_burned_out
    use_blueprint:
      path: "device_stopped_consuming.yaml"
      input:
        delay: *power_delay
        entity_id: "switch.slinky_heater"
        power_sensor: "sensor.slinky_heater_power"
        action:
          - service: python_script.notify
            data:
              <<: *power_notification_data
              tag: "slinky_heater_burned_out"
              title: "Check Slinky's Ceramic Heater"
              message: "It appears that Slinky's ceramic heater has burned out."

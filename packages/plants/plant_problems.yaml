homeassistant:
  customize:
    automation.notify_plant_problems:
      friendly_name: "Notify plant problems"
      icon: "mdi:message-settings-variant"
    group.all_plants:
      icon: "mdi:flower"

automation:
  - alias: notify_plant_problems
    initial_state: True
    trigger:
      - platform: template
        value_template: "{{ state_attr('plant.maitre_doyle', 'problem') not in ('none', 'battery low') }}"
      - platform: template
        value_template: "{{ state_attr('plant.spidy', 'problem') not in ('none', 'battery low') }}"
      - platform: template
        value_template: "{{ state_attr('plant.viny', 'problem') not in ('none', 'battery low') }}"
    action:
      - service: python_script.notify
        data_template:
          audio: True
          persistent: True
          push_target: "household"
          tag: "plant_{{ trigger.to_state.object_id }}"
          url: "/lovelace/plants"
          title: "Check {{ trigger.to_state.name }}"
          message: >-
            {%
            set issues = (
              trigger.to_state.attributes.problem
                | lower
                | replace('moisture low', 'thirsty')
                | replace('moisture high', 'drowning')
                | replace('temperature low', 'cold')
                | replace('temperature high', 'hot')
                | replace('brightness low', 'afraid')
                | replace('brightness high', 'blinded')
                | replace('conductivity low', 'hungry')
                | replace('conductivity high', 'a glutton')
                | replace('battery low', '')
              ).split(', ')
              | reject('equalto', '')
              | sort
              | list
            %}
            {% for issue in issues -%}
              {%- if loop.first %}{{ trigger.to_state.name }} is {% elif loop.last %} and {% else %}, {% endif -%}
              {{ issue }}
              {%- if loop.last %}.{% endif %}
            {%- endfor %}

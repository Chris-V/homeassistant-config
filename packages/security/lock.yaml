automation:
  - id: "automation.notify_jammed_lock"
    alias: "notify_jammed_lock"
    initial_state: true
    mode: "parallel"

    trigger:
      - platform: state
        entity_id: "binary_sensor.kitchen_door_lock_jammed"
        to:
          - "on"
          - "off"

    variables:
      is_jammed: "{{ trigger.to_state.state }}"

    action:
      - if: "{{ is_jammed == 'on' }}"
        then:
          - action: python_script.notify
            data:
              title: "The kitchen door lock is jammed."
              <<: &notification_options
                tag: "kitchen_lock_jammed"
                audio: true
                persistent: true
                push_target: "household"
                priority: true
        else:
          - action: python_script.notify
            data:
              dismiss: true
              <<: *notification_options

template:
  - unique_id: "kitchen_door_unlock"
    trigger:
      - platform: event
        event_type: "zwave_js_notification"
        event_data:
          node_id: 57
          command_class: 113
          type: 6
          event: 6
    sensor:
      - unique_id: "user"
        name: "Kitchen door unlocks"
        state: >-
          {% set user_id = trigger.event.data.parameters.userId | int(-1) %}
          {% set users = {
                0: 'Master',
                1: 'Chris',
                2: 'Karine',
              } %}
          {{ users[user_id] | default('Code #' ~ user_id) }}
        attributes:
          user_id: "{{ trigger.event.data.parameters.userId }}"

homeassistant:
  customize:
    binary_sensor.presence_armed:
      friendly_name: "Armed"
    binary_sensor.intrusion_activity:
      friendly_name: "Intrusion"

notify:
  - platform: "file"
    name: "intrusion_log"
    filename: "/config/intrusion.log"
    timestamp: true

input_boolean:
  force_presence_armed:
    name: "Force armed"
    icon: "mdi:shield-check"
  silence_intrusion_alarm:
    name: "Silence alarm"
    icon: "mdi:volume-mute"
    initial: false

input_datetime:
  presence_armed_since:
    name: "Presence armed since"
    has_date: true
    has_time: true

input_text:
  presence_armed_id:
    name: "Presence armed ID"
    icon: "mdi:shield-alert"

binary_sensor:
  - platform: mqtt
    name: "intrusion_events"
    device_class: "safety"
    state_topic: &activity_events_topic "home-assistant/intrusion/events"
    value_template: "{{ value_json.state }}"
    payload_on: "on"
    payload_off: "off"
    json_attributes_topic: *activity_events_topic
    json_attributes_template: "{{ value_json.attributes | to_json }}"

template:
  - binary_sensor:
      - unique_id: "449f4beb-83a1-43d2-a7ba-64de0a305960"
        name: "presence_armed"
        icon: >-
          {% if is_state('binary_sensor.presence_armed', 'on') -%}
            mdi:shield-check
          {%- else -%}
            mdi:shield-off
          {%- endif %}
        state: >-
          {{
            is_state('input_boolean.force_presence_armed', 'on')
              or not is_state('group.household', 'home')
              and is_state('binary_sensor.guest_mode', 'off')
          }}

      - unique_id: "ccc872ad-92f9-4b3e-87a5-452292b6b118"
        name: "intrusion_activity"
        device_class: "safety"
        delay_on: 15
        delay_off: 15
        attributes:
          activity: >-
            {% if is_state('binary_sensor.presence_armed', 'on') -%}
              {%
                set devices =
                  (state_attr('sensor.intrusion_events', 'devices') | default([], True) | list)
                    + (state_attr('binary_sensor.intrusion_events', 'devices') | default([], True) | list)
              -%}
              {%
                set entities =
                  (state_attr('sensor.intrusion_events', 'entities') | default([], True) | list)
                    + (state_attr('binary_sensor.intrusion_events', 'entities') | default([], True) | list)
              -%}

              {% set ns = namespace(device_names = []) -%}
              {% for device in intrusion_devices -%}
                {% set ns.device_names = ns.device_names + [device_attr(device, 'name')] -%}
              {% endfor -%}

              {{ (entities | map(attribute = 'name') + ns.device_names) | unique | sort -}}
            {% else -%}
              {{ state_attr('binary_sensor.intrusion_activity', 'activity') | default([], True) -}}
            {% endif %}
        availability: >-
          {{ states.binary_sensor.presence_armed is not none }}
        icon: >-
          {%- if is_state('binary_sensor.intrusion_activity', 'on') -%}
            mdi:shield-alert
          {%- elif is_state('binary_sensor.presence_armed', 'on') -%}
            mdi:shield-check
          {%- else -%}
            mdi:shield-off
          {%- endif %}
        state: >-
          {{
            is_state('binary_sensor.presence_armed', 'on')
              and is_state('binary_sensor.intrusion_events', 'on')
              or states('sensor.intrusion_events') | default | int > 0
          }}

    sensor:
      - unique_id: "0d5d4c9c-bcb3-4e21-b7b5-74e67b2aae6a"
        name: "intrusion_events"
        state: >-
          {% set armed = states.binary_sensor.presence_armed -%}
          {% if armed is not none and armed.state == 'on' -%}
            {%
              set armed_since = states('input_datetime.presence_armed_since')
                | as_datetime
                | as_local
                | max(armed.last_changed)
            -%}
            {{
              expand(
                'binary_sensor.all_windows',
                'binary_sensor.all_doors',
                'binary_sensor.all_motions',
              ) | selectattr('last_changed', '>=', armed_since) | length
            }}
          {%- else -%}
            0
          {%- endif %}
        attributes:
          entities: >-
            {% set ns = namespace(entities = []) -%}
            {% set armed = states.binary_sensor.presence_armed -%}
            {% if armed is not none and armed.state == 'on' -%}
              {%
                set armed_since = states('input_datetime.presence_armed_since')
                  | as_datetime
                  | as_local
                  | max(armed.last_changed)
              -%}
              {%
                set ns.entities = expand(
                  'binary_sensor.all_windows',
                  'binary_sensor.all_doors',
                  'binary_sensor.all_motions',
                ) | selectattr('last_changed', '>=', armed_since)
              -%}
            {%- endif -%}

            {{ ns.entities | map(attribute = 'entity_id') | list }}

script:
  initialize_alarm_states:
    alias: "Reset presence alarm states"
    mode: "single"
    sequence:
      - variables:
          arming_id: "{{ context.id }}"
      - service: input_text.set_value
        entity_id: "input_text.presence_armed_id"
        data:
          value: "{{ arming_id }}"
      - service: input_datetime.set_datetime
        entity_id: "input_datetime.presence_armed_since"
        data:
          timestamp: "{{ now().timestamp() }}"
      - service: mqtt.publish
        data:
          topic: *activity_events_topic
          qos: 1
          retain: true
          payload_template: >-
            {
              "state": "off",
              "attributes": { "devices": [], "entities": [] }
            }
      - service: input_boolean.turn_off
        entity_id: "input_boolean.silence_intrusion_alarm"
      - service: notify.intrusion_log
        data:
          message: "({{ arming_id }}) Intrusion alarm initialized."

automation:
  - id: "2c7d9807-9f19-4b55-b944-17005a27e6c0"
    alias: "presence_alarm_armed"
    description: "Initialize home alarm states when arming is enabled."
    initial_state: true
    trigger:
      - platform: state
        entity_id: "binary_sensor.presence_armed"
        from: "off"
        to: "on"
    action:
      - service: notify.intrusion_log
        data:
          message: "Intrusion alarm armed."
      - service: "script.initialize_alarm_states"

  - id: "64ef04c6-d94c-4d70-a116-d50ab1b295a5"
    alias: "presence_alarm_disarmed"
    description: "Log end of home alarm arming."
    initial_state: true
    trigger:
      - platform: state
        entity_id: "binary_sensor.presence_armed"
        from: "on"
        to: "off"
    action:
      - service: notify.intrusion_log
        data:
          message: "({{ states('input_text.presence_armed_id') }}) Intrusion alarm disarmed."

  - id: "6edc94d0-d9f9-44eb-bad1-6873523ae9e8"
    alias: "armed_switch_paddle_tapped"
    description: "Detect tapped paddle switches when home is armed."
    initial_state: true
    mode: "parallel"

    trigger:
      - platform: event
        event_type: "zwave_js_value_notification"

    variables:
      device_id: "{{ trigger.event.data.device_id }}"
      action_type: "{{ trigger.event.data.value | default | string }}"

    condition:
      - condition: state
        entity_id: "binary_sensor.presence_armed"
        state: "on"
      - "{{ action_type.startswith('KeyPressed') or action_type == 'KeyReleased' }}"

    action:
      - service: mqtt.publish
        data:
          topic: *activity_events_topic
          qos: 1
          retain: true
          payload_template: >-
            {% set devices = state_attr('binary_sensor.intrusion_events', 'devices') | default([], True) -%}
            {% set entities = state_attr('binary_sensor.intrusion_events', 'entities') | default([], True) -%}
            {{
              {
                'state': 'on',
                'attributes': {
                  'devices': (devices + [device_id]) | unique | list,
                  'entities': entities,
                }
              } | to_json
            }}

  - id: "2b123148-0e89-4722-8a31-8547d7876033"
    alias: "sound_intrusion_alarm"
    description: "Play the intrusion alarm audio while the intrusion is active."
    initial_state: true
    mode: "single"
    max_exceeded: "silent"

    trigger:
      - platform: homeassistant
        event: "start"
      - platform: state
        entity_id: "binary_sensor.intrusion_activity"
        to: "on"

    condition:
      - condition: state
        entity_id: "binary_sensor.intrusion_activity"
        state: "on"

    action:
      - repeat:
          sequence:
            - choose:
                - conditions:
                    - condition: state
                      entity_id: "input_boolean.silence_intrusion_alarm"
                      state: "off"
                  sequence:
                    - service: script.broadcast_notification
                      data:
                        message: "Intrusion detected. Authorities have been notified."
            - delay: 10
          until:
            - condition: state
              entity_id: "binary_sensor.intrusion_activity"
              state: "off"

  - id: "b0045b02-1756-4635-bc2c-4344de74d0b6"
    alias: "notify_intrusion_alarm"
    description: "Send and update the intrusion notification to owners."
    initial_state: true
    mode: "single"
    max_exceeded: "silent"

    trigger:
      - platform: homeassistant
        event: "start"
      - platform: state
        entity_id: "binary_sensor.intrusion_activity"
        to: "on"

    condition:
      - condition: state
        entity_id: "binary_sensor.intrusion_activity"
        state: "on"

    action:
      - variables:
          arming_id: "{{ states('input_text.presence_armed_id') }}"

      - repeat:
          sequence:
            - service: python_script.notify
              data:
                <<: &alarm_notification
                  audio: false
                  persistent: true
                  push_target: "household"
                  url: "/lovelace/security"
                  priority: true
                  tag: "{{ arming_id }}"
                  message: >
                    {%
                      set areas = state_attr('binary_sensor.intrusion_activity', 'activity')
                        | map('area_name')
                        | select('string')
                        | sort
                        | unique
                        | list
                    %}
                    {% set count = state_attr('binary_sensor.intrusion_activity', 'activity') | length %}
                    {{ count }} events detected{% if areas | count > 0 %} in {{ areas[:-1] | join(', ') }}{% if areas | count > 1 %} and {% endif %}{{ areas[-1] }}{% endif %}.
                title: "Intrusion detected"
                dismissible: false
                push_actions:
                  - action: "silence_{{ arming_id }}"
                    title: "Silence"
                  - action: "reset_{{ arming_id }}"
                    title: "Reset"

            - service: notify.intrusion_log
              data:
                message: "({{ arming_id }}) Intrusion activity: `{{ state_attr('binary_sensor.intrusion_activity', 'activity') | to_json }}`"

            - wait_for_trigger:
                - platform: "state"
                  entity_id: "binary_sensor.intrusion_activity"
          until:
            - condition: state
              entity_id: "binary_sensor.intrusion_activity"
              state: "off"

      - service: python_script.notify
        data:
          <<: *alarm_notification
          title: "Intrusion cleared"
          dismissible: true
      - service: notify.intrusion_log
        data:
          message: "({{ arming_id }}) Intrusion cleared."

  - id: "65383759-a03c-4c81-9965-7154e83626fd"
    alias: "silence_intrusion_alarm"
    description: "Silence the home alarm audio when requested."
    initial_state: true
    mode: "single"
    max_exceeded: "silent"

    trigger:
      - platform: event
        event_type:
          - "html5_notification.clicked"
          - "mobile_app_notification_action"

    variables:
      arming_id: "{{ states('input_text.presence_armed_id') }}"

    condition:
      - condition: state
        entity_id: "binary_sensor.intrusion_activity"
        state: "on"
      - "{{ trigger.event.data.action == 'silence_' ~ arming_id }}"

    action:
      - service: input_boolean.turn_on
        data:
          entity_id: "input_boolean.silence_intrusion_alarm"
      - service: notify.intrusion_log
        data:
          message: "({{ arming_id }}) Intrusion alarm silenced."

  - id: "f1d67201-6a81-4214-a528-8a5afff919c0"
    alias: "reset_intrusion_alarm"
    description: "Reinitialize the home alarm when requested."
    initial_state: true
    mode: "single"
    max_exceeded: "silent"

    trigger:
      - platform: event
        event_type:
          - "html5_notification.clicked"
          - "mobile_app_notification_action"

    variables:
      arming_id: "{{ states('input_text.presence_armed_id') }}"

    condition:
      - condition: state
        entity_id: "binary_sensor.intrusion_activity"
        state: "on"
      - "{{ trigger.event.data.action == 'reset_' ~ arming_id }}"

    action:
      - service: notify.intrusion_log
        data:
          message: "({{ arming_id }}) Intrusion alarm cleared."
      - service: "script.initialize_alarm_states"

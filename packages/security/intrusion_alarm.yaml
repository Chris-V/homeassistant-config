homeassistant:
  customize:
    binary_sensor.presence_armed:
      friendly_name: "Armed"
    binary_sensor.intrusion_activity:
      friendly_name: "Intrusion"

# Configured in UI:
# notify:
#   - platform: "file"
#     name: "intrusion_log"
#     filename: "/config/logs/intrusion.log"
#     timestamp: true

input_boolean:
  force_presence_armed:
    name: "Force armed"
    icon: "mdi:shield-check"
  silence_intrusion_alarm:
    name: "Silence alarm"
    icon: "mdi:volume-mute"
    initial: false

input_datetime:
  presence_armed_since:
    name: "Presence armed since"
    has_date: true
    has_time: true

input_text:
  presence_armed_id:
    name: "Presence armed ID"
    icon: "mdi:shield-alert"

mqtt:
  binary_sensor:
    - name: "intrusion_events"
      device_class: "safety"
      state_topic: &activity_events_topic "home-assistant/intrusion/events"
      value_template: "{{ value_json.state }}"
      payload_on: "on"
      payload_off: "off"
      json_attributes_topic: *activity_events_topic
      json_attributes_template: "{{ value_json.attributes | to_json }}"

template:
  - binary_sensor:
      - unique_id: "449f4beb-83a1-43d2-a7ba-64de0a305960"
        name: "presence_armed"
        icon: "mdi:shield-{{ iif(this.state == 'on', 'check', 'off') }}"
        state: >-
          {{
            is_state('input_boolean.force_presence_armed', 'on')
              or not is_state('group.household', 'home')
              and is_state('binary_sensor.guest_mode', 'off')
          }}

      - unique_id: "ccc872ad-92f9-4b3e-87a5-452292b6b118"
        name: "intrusion_activity"
        device_class: "safety"
        delay_on: 15
        delay_off: 15
        attributes:
          activity: >-
            {% if is_state('binary_sensor.presence_armed', 'on') -%}
              {{
                set entities = state_attr('binary_sensor.intrusion_events', 'entities')
                  | default([], True)
                  | map(attribute = 'name')
                  | unique
                  | sort
              }}
            {%- else -%}
              {{ state_attr('binary_sensor.intrusion_activity', 'activity') | default([], True) -}}
            {% endif %}
        icon: >-
          {% if this.state == 'on' -%}
            mdi:shield-alert
          {%- elif is_state('binary_sensor.presence_armed', 'on') -%}
            mdi:shield-check
          {%- else -%}
            mdi:shield-off
          {%- endif %}
        state: >-
          {{
            is_state('binary_sensor.presence_armed', 'on')
              and is_state('binary_sensor.intrusion_events', 'on')
          }}

script:
  initialize_alarm_states:
    alias: "Reset presence alarm states"
    mode: "single"
    sequence:
      - variables:
          arming_id: "{{ context.id }}"
      - service: input_text.set_value
        entity_id: "input_text.presence_armed_id"
        data:
          value: "{{ arming_id }}"
      - service: input_datetime.set_datetime
        entity_id: "input_datetime.presence_armed_since"
        data:
          timestamp: "{{ now().timestamp() }}"
      - service: mqtt.publish
        data:
          topic: *activity_events_topic
          qos: 1
          retain: true
          payload_template: >-
            {
              "state": "off",
              "attributes": { "devices": [], "entities": [] }
            }
      - service: input_boolean.turn_off
        entity_id: "input_boolean.silence_intrusion_alarm"
      - service: "notify.send_message"
        target:
          entity_id: "notify.intrusion_log"
        data:
          message: "({{ arming_id }}) Intrusion alarm initialized."

automation:
  - id: "2c7d9807-9f19-4b55-b944-17005a27e6c0"
    alias: "presence_alarm_armed"
    description: "Initialize home alarm states when arming is enabled."
    initial_state: true
    trigger:
      - platform: state
        entity_id: "binary_sensor.presence_armed"
        from: "off"
        to: "on"
    action:
      - service: "notify.send_message"
        target:
          entity_id: "notify.intrusion_log"
        data:
          message: "Intrusion alarm armed."
      - service: "script.initialize_alarm_states"

  - id: "64ef04c6-d94c-4d70-a116-d50ab1b295a5"
    alias: "presence_alarm_disarmed"
    description: "Log end of home alarm arming."
    initial_state: true
    trigger:
      - platform: state
        entity_id: "binary_sensor.presence_armed"
        from: "on"
        to: "off"
    action:
      - service: "notify.send_message"
        target:
          entity_id: "notify.intrusion_log"
        data:
          message: "({{ states('input_text.presence_armed_id') }}) Intrusion alarm disarmed."

  - id: "1bbacc2c-2ce3-428a-bfdd-6d9480be23b8"
    alias: "detect_activity_while_armed"
    description: "Detect activity in the house while system is armed."
    initial_state: true
    mode: "queued"

    trigger:
      - platform: "state"
        entity_id:
          - "sensor.current_door"
          - "sensor.current_motion"
          - "sensor.current_window"
        variables:
          entity_id: "{{ trigger.to_state.state }}"
      - platform: "state"
        entity_id:
          - "event.hallway_spots_dimmer_on_pressed"
          - "event.hallway_spots_dimmer_off_pressed"
          - "event.kitchen_track_light_dimmer_off_pressed"
          - "event.kitchen_track_light_dimmer_on_pressed"
          - "event.backyard_soffit_spots_dimmer_off_pressed"
          - "event.backyard_soffit_spots_dimmer_on_pressed"
          - "event.dining_room_light_dimmer_off_pressed"
          - "event.dining_room_light_dimmer_on_pressed"
          - "event.side_porch_sconce_dimmer_off_pressed"
          - "event.side_porch_sconce_dimmer_on_pressed"
          - "event.master_bedroom_sconces_dimmer_off_pressed"
          - "event.master_bedroom_sconces_dimmer_on_pressed"
          - "event.master_bedroom_spots_dimmer_off_pressed"
          - "event.master_bedroom_spots_dimmer_on_pressed"
          - "event.kitchen_sink_light_switch_off_pressed"
          - "event.kitchen_sink_light_switch_on_pressed"
          - "event.front_porch_light_switch_off_pressed"
          - "event.front_porch_light_switch_on_pressed"
          - "event.shed_outdoor_light_switch_on_pressed"
          - "event.shed_outdoor_light_switch_off_pressed"
          - "event.shed_light_switch_off_pressed"
          - "event.shed_light_switch_on_pressed"
          - "event.master_bedroom_closet_light_switch_on_pressed"
          - "event.basement_bathroom_fan_switch_on_pressed"
          - "event.basement_bathroom_fan_switch_off_pressed"
          - "event.basement_bathroom_light_switch_on_pressed"
          - "event.basement_bathroom_light_switch_off_pressed"
          - "event.basement_bathroom_vanity_dimmer_on_pressed"
          - "event.basement_bathroom_vanity_dimmer_off_pressed"
          - "event.basement_hallway_dimmer_on_pressed"
          - "event.basement_hallway_dimmer_off_pressed"
          - "event.downstairs_light_switch_on_pressed"
          - "event.downstairs_light_switch_off_pressed"
          - "event.guest_bedroom_closet_light_switch_on_pressed"
          - "event.guest_bedroom_closet_light_switch_off_pressed"
          - "event.guest_bedroom_spots_dimmer_off_pressed"
          - "event.guest_bedroom_spots_dimmer_on_pressed"
          - "event.laundry_dimmer_off_pressed"
          - "event.laundry_dimmer_on_pressed"
          - "event.bookshelf_light_switch_on_pressed"
          - "event.bookshelf_light_switch_off_pressed"
          - "event.foyer_light_switch_on_pressed"
          - "event.foyer_light_switch_off_pressed"
          - "event.living_room_dimmer_off_pressed"
          - "event.living_room_dimmer_on_pressed"
          - "event.staircase_dimmer_on_pressed"
          - "event.staircase_dimmer_off_pressed"
          - "event.lounge_dimmer_off_pressed"
          - "event.lounge_dimmer_on_pressed"
          - "event.main_bathroom_dimmer_on_pressed"
          - "event.main_bathroom_dimmer_off_pressed"
          - "event.main_bathroom_fan_switch_on_pressed"
          - "event.main_bathroom_fan_switch_off_pressed"
          - "event.main_bathroom_vanity_light_switch_on_pressed"
          - "event.main_bathroom_vanity_light_switch_off_pressed"
          - "event.office_spots_dimmer_off_pressed"
          - "event.office_spots_dimmer_on_pressed"
          - "event.studio_panel_light_switch_off_pressed"
          - "event.studio_panel_light_switch_on_pressed"
          - "event.studio_spots_dimmer_off_pressed"
          - "event.studio_spots_dimmer_on_pressed"
          - "event.workshop_light_switch_on_pressed"
          - "event.workshop_light_switch_off_pressed"
        variables:
          entity_id: "{{ trigger.entity_id }}"

    condition:
      - condition: "state"
        entity_id: "binary_sensor.presence_armed"
        state: "on"
      - condition: "template"
        value_template: "{{ entity_id != '' }}"

    action:
      - service: mqtt.publish
        data:
          topic: *activity_events_topic
          qos: 1
          retain: true
          payload_template: >-
            {% set devices = state_attr('binary_sensor.intrusion_events', 'devices') | default([], True) -%}
            {% set entities = state_attr('binary_sensor.intrusion_events', 'entities') | default([], True) -%}
            {{
              {
                'state': 'on',
                'attributes': {
                  'devices': (devices + [entity_id | device_id]) | unique | sort | list,
                  'entities': (entities + [entity_id]) | unique | sort | list,
                }
              } | to_json
            }}

  - id: "2b123148-0e89-4722-8a31-8547d7876033"
    alias: "sound_intrusion_alarm"
    description: "Play the intrusion alarm audio while the intrusion is active."
    initial_state: true
    mode: "single"
    max_exceeded: "silent"

    trigger:
      - platform: homeassistant
        event: "start"
      - platform: state
        entity_id: "binary_sensor.intrusion_activity"
        to: "on"

    condition:
      - condition: state
        entity_id: "binary_sensor.intrusion_activity"
        state: "on"

    action:
      - repeat:
          sequence:
            - if:
                - condition: state
                  entity_id: "input_boolean.silence_intrusion_alarm"
                  state: "off"
              then:
                - service: script.broadcast_notification
                  data:
                    message: "Intrusion detected. Authorities have been notified."
            - delay: 10
          until:
            - condition: state
              entity_id: "binary_sensor.intrusion_activity"
              state: "off"

  - id: "b0045b02-1756-4635-bc2c-4344de74d0b6"
    alias: "notify_intrusion_alarm"
    description: "Send and update the intrusion notification to owners."
    initial_state: true
    mode: "single"
    max_exceeded: "silent"

    trigger:
      - platform: homeassistant
        event: "start"
      - platform: state
        entity_id: "binary_sensor.intrusion_activity"
        to: "on"

    condition:
      - condition: state
        entity_id: "binary_sensor.intrusion_activity"
        state: "on"

    action:
      - variables:
          arming_id: "{{ states('input_text.presence_armed_id') }}"

      - repeat:
          sequence:
            - service: python_script.notify
              data:
                <<: &alarm_notification
                  audio: false
                  persistent: true
                  push_target: "household"
                  url: "/lovelace/security"
                  priority: true
                  tag: "{{ arming_id }}"
                  message: |-
                    {% from 'strings.jinja' import nice_join %}
                    {%-
                      set areas = state_attr('binary_sensor.intrusion_activity', 'activity')
                        | map('area_name')
                        | select('string')
                        | unique
                        | sort
                    %}
                    {%- set count = state_attr('binary_sensor.intrusion_activity', 'activity') | length %}
                    {{ count }} events detected{% if areas | count > 0 %} in {{ nice_join(areas) }}{% endif %}.
                title: "Intrusion detected"
                dismissible: false
                push_actions:
                  - action: "silence_{{ arming_id }}"
                    title: "Silence"
                  - action: "reset_{{ arming_id }}"
                    title: "Reset"

            - service: "notify.send_message"
              target:
                entity_id: "notify.intrusion_log"
              data:
                message: "({{ arming_id }}) Intrusion activity: `{{ state_attr('binary_sensor.intrusion_activity', 'activity') | to_json }}`"

            - wait_for_trigger:
                - platform: "state"
                  entity_id: "binary_sensor.intrusion_activity"
          until:
            - condition: state
              entity_id: "binary_sensor.intrusion_activity"
              state: "off"

      - service: python_script.notify
        data:
          <<: *alarm_notification
          title: "Intrusion cleared"
          dismissible: true
      - service: "notify.send_message"
        target:
          entity_id: "notify.intrusion_log"
        data:
          message: "({{ arming_id }}) Intrusion cleared."

  - id: "65383759-a03c-4c81-9965-7154e83626fd"
    alias: "silence_intrusion_alarm"
    description: "Silence the home alarm audio when requested."
    initial_state: true
    mode: "single"
    max_exceeded: "silent"

    trigger:
      - platform: event
        event_type:
          - "html5_notification.clicked"
          - "mobile_app_notification_action"

    variables:
      arming_id: "{{ states('input_text.presence_armed_id') }}"

    condition:
      - condition: state
        entity_id: "binary_sensor.intrusion_activity"
        state: "on"
      - "{{ trigger.event.data.action == 'silence_' ~ arming_id }}"

    action:
      - service: input_boolean.turn_on
        data:
          entity_id: "input_boolean.silence_intrusion_alarm"
      - service: "notify.send_message"
        target:
          entity_id: "notify.intrusion_log"
        data:
          message: "({{ arming_id }}) Intrusion alarm silenced."

  - id: "f1d67201-6a81-4214-a528-8a5afff919c0"
    alias: "reset_intrusion_alarm"
    description: "Reinitialize the home alarm when requested."
    initial_state: true
    mode: "single"
    max_exceeded: "silent"

    trigger:
      - platform: event
        event_type:
          - "html5_notification.clicked"
          - "mobile_app_notification_action"

    variables:
      arming_id: "{{ states('input_text.presence_armed_id') }}"

    condition:
      - condition: state
        entity_id: "binary_sensor.intrusion_activity"
        state: "on"
      - "{{ trigger.event.data.action == 'reset_' ~ arming_id }}"

    action:
      - service: "notify.send_message"
        target:
          entity_id: "notify.intrusion_log"
        data:
          message: "({{ arming_id }}) Intrusion alarm cleared."
      - service: "script.initialize_alarm_states"

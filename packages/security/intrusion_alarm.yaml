# binary_sensor.intrusion_activity
#   Keeps track of entity interactions during an armed session
#   State is cleared when the alarm is disarmed.
#   {entity_id} is cleared when the alarm is armed.
# group.intrusion_record:
#   Keeps track of entity interactions during an armed session
#   State is cleared when the alarm is armed.
#   {entity_id} is cleared when the alarm is armed.

# Configured in UI:
# notify:
#   - platform: "file"
#     name: "intrusion_log"
#     filename: "/config/logs/intrusion.log"
#     timestamp: true

homeassistant:
  customize:
    binary_sensor.presence_armed:
      friendly_name: "Armed"
    binary_sensor.intrusion_activity:
      friendly_name: "Intrusion"

input_boolean:
  force_presence_armed:
    name: "Force armed"
    icon: "mdi:shield-check"
  silence_intrusion_alarm:
    name: "Silence alarm"
    icon: "mdi:volume-mute"
    initial: false

input_datetime:
  presence_armed_since:
    name: "Presence armed since"
    has_date: true
    has_time: true

input_text:
  presence_armed_id:
    name: "Presence armed ID"
    icon: "mdi:shield-alert"

template:
  - binary_sensor:
      - name: "presence_armed"
        unique_id: "449f4beb-83a1-43d2-a7ba-64de0a305960"
        icon: "mdi:shield-{{ iif(this.state == 'on', 'check', 'off') }}"
        state: >-
          {{
            is_state('input_boolean.force_presence_armed', 'on')
              or not is_state('group.household', 'home')
              and is_state('binary_sensor.guest_mode', 'off')
          }}

  - trigger:
      - platform: "state"
        entity_id:
          - "binary_sensor.presence_armed"
          - "todo.intrusion_record"
        # Delay so we have some time to clear previous record when arming.
        # A potential improvement could be a second todo integration to store the previous session.
        for: 3
    action:
      - action: "todo.get_items"
        response_variable: "intrusion_record"
        target:
          entity_id: "todo.intrusion_record"
    binary_sensor:
      - name: "intrusion_activity"
        unique_id: "ccc872ad-92f9-4b3e-87a5-452292b6b118"
        device_class: "safety"
        state: >-
          {{
            is_state('binary_sensor.presence_armed', 'on')
              and intrusion_record['todo.intrusion_record']['items'] | count > 0
          }}
        icon: >-
          {% if this.state == 'on' -%}
            mdi:shield-alert
          {%- elif is_state('binary_sensor.presence_armed', 'on') -%}
            mdi:shield-check
          {%- else -%}
            mdi:shield-off
          {%- endif %}
        attributes:
          entity_id: >-
            {{
              intrusion_record['todo.intrusion_record']['items']
                | map(attribute = 'summary')
                | unique | sort
            }}

script:
  initialize_alarm_states:
    alias: "Reset presence alarm states"
    mode: "single"
    sequence:
      - variables:
          arming_id: "{{ context.id }}"

      - action: "input_text.set_value"
        target:
          entity_id: "input_text.presence_armed_id"
        data:
          value: "{{ arming_id }}"
      - action: "input_datetime.set_datetime"
        target:
          entity_id: "input_datetime.presence_armed_since"
        data:
          timestamp: "{{ now().timestamp() }}"

      - action: "todo.get_items"
        response_variable: "intrusion_record"
        target:
          entity_id: "todo.intrusion_record"
      - repeat:
          for_each: "{{ intrusion_record['todo.intrusion_record']['items'] }}"
          sequence:
            - action: "todo.remove_item"
              target:
                entity_id: "todo.intrusion_record"
              data:
                item: "{{ repeat.item.summary }}"

      - action: "input_boolean.turn_off"
        target:
          entity_id: "input_boolean.silence_intrusion_alarm"

      - action: "notify.send_message"
        target:
          entity_id: "notify.intrusion_log"
        data:
          message: "({{ arming_id }}) Intrusion alarm initialized."

automation:
  - alias: "presence_alarm_armed"
    id: "2c7d9807-9f19-4b55-b944-17005a27e6c0"
    description: "Initialize home alarm states when arming is enabled."
    initial_state: true
    trigger:
      - platform: state
        entity_id: "binary_sensor.presence_armed"
        from: "off"
        to: "on"
    action:
      - action: "notify.send_message"
        target:
          entity_id: "notify.intrusion_log"
        data:
          message: "Intrusion alarm armed."
      - action: "script.initialize_alarm_states"

  - alias: "log_intrusion_clear"
    id: "249f90de-0afe-4735-9b17-a59f035ec4f3"
    description: "Log intrusion cleared events."
    initial_state: true
    mode: "single"
    max_exceeded: "silent"

    trigger:
      - platform: state
        entity_id: "binary_sensor.intrusion_activity"
        from: "on"
        to: "off"

    action:
      - action: "notify.send_message"
        target:
          entity_id: "notify.intrusion_log"
        data:
          message: "({{ states('input_text.presence_armed_id') }}) Intrusion cleared."

  - alias: "log_presence_alarm_disarmed"
    id: "64ef04c6-d94c-4d70-a116-d50ab1b295a5"
    description: "Log disarming of presence alarm."
    initial_state: true
    trigger:
      - platform: state
        entity_id: "binary_sensor.presence_armed"
        from: "on"
        to: "off"
    action:
      - action: "notify.send_message"
        target:
          entity_id: "notify.intrusion_log"
        data:
          message: "({{ states('input_text.presence_armed_id') }}) Presence alarm disarmed."

  - alias: "record_activity_while_armed"
    id: "1bbacc2c-2ce3-428a-bfdd-6d9480be23b8"
    description: "Record activity in the house while system is armed."
    initial_state: true
    mode: "queued"

    trigger:
      - platform: "state"
        entity_id:
          - "sensor.current_door"
          - "sensor.current_motion"
          - "sensor.current_window"
        variables:
          entity_id: "{{ trigger.to_state.state }}"
      - platform: "state"
        entity_id:
          - "event.hallway_spots_dimmer_on_pressed"
          - "event.hallway_spots_dimmer_off_pressed"
          - "event.kitchen_track_light_dimmer_off_pressed"
          - "event.kitchen_track_light_dimmer_on_pressed"
          - "event.backyard_soffit_spots_dimmer_off_pressed"
          - "event.backyard_soffit_spots_dimmer_on_pressed"
          - "event.dining_room_light_dimmer_off_pressed"
          - "event.dining_room_light_dimmer_on_pressed"
          - "event.side_porch_sconce_dimmer_off_pressed"
          - "event.side_porch_sconce_dimmer_on_pressed"
          - "event.master_bedroom_sconces_dimmer_off_pressed"
          - "event.master_bedroom_sconces_dimmer_on_pressed"
          - "event.master_bedroom_spots_dimmer_off_pressed"
          - "event.master_bedroom_spots_dimmer_on_pressed"
          - "event.kitchen_sink_light_switch_off_pressed"
          - "event.kitchen_sink_light_switch_on_pressed"
          - "event.front_porch_light_switch_off_pressed"
          - "event.front_porch_light_switch_on_pressed"
          - "event.shed_outdoor_light_switch_on_pressed"
          - "event.shed_outdoor_light_switch_off_pressed"
          - "event.shed_light_switch_off_pressed"
          - "event.shed_light_switch_on_pressed"
          - "event.master_bedroom_closet_light_switch_off_pressed"
          - "event.master_bedroom_closet_light_switch_on_pressed"
          - "event.basement_bathroom_fan_switch_on_pressed"
          - "event.basement_bathroom_fan_switch_off_pressed"
          - "event.basement_bathroom_light_switch_on_pressed"
          - "event.basement_bathroom_light_switch_off_pressed"
          - "event.basement_bathroom_vanity_dimmer_on_pressed"
          - "event.basement_bathroom_vanity_dimmer_off_pressed"
          - "event.basement_hallway_dimmer_on_pressed"
          - "event.basement_hallway_dimmer_off_pressed"
          - "event.downstairs_light_switch_on_pressed"
          - "event.downstairs_light_switch_off_pressed"
          - "event.guest_bedroom_closet_light_switch_on_pressed"
          - "event.guest_bedroom_closet_light_switch_off_pressed"
          - "event.guest_bedroom_spots_dimmer_off_pressed"
          - "event.guest_bedroom_spots_dimmer_on_pressed"
          - "event.laundry_dimmer_off_pressed"
          - "event.laundry_dimmer_on_pressed"
          - "event.bookshelf_light_switch_on_pressed"
          - "event.bookshelf_light_switch_off_pressed"
          - "event.foyer_light_switch_on_pressed"
          - "event.foyer_light_switch_off_pressed"
          - "event.living_room_dimmer_off_pressed"
          - "event.living_room_dimmer_on_pressed"
          - "event.staircase_dimmer_on_pressed"
          - "event.staircase_dimmer_off_pressed"
          - "event.lounge_dimmer_off_pressed"
          - "event.lounge_dimmer_on_pressed"
          - "event.main_bathroom_dimmer_on_pressed"
          - "event.main_bathroom_dimmer_off_pressed"
          - "event.main_bathroom_fan_switch_on_pressed"
          - "event.main_bathroom_fan_switch_off_pressed"
          - "event.main_bathroom_vanity_light_switch_on_pressed"
          - "event.main_bathroom_vanity_light_switch_off_pressed"
          - "event.office_spots_dimmer_off_pressed"
          - "event.office_spots_dimmer_on_pressed"
          - "event.studio_panel_light_switch_off_pressed"
          - "event.studio_panel_light_switch_on_pressed"
          - "event.studio_spots_dimmer_off_pressed"
          - "event.studio_spots_dimmer_on_pressed"
          - "event.workshop_light_switch_on_pressed"
          - "event.workshop_light_switch_off_pressed"
        variables:
          entity_id: "{{ trigger.entity_id }}"

    condition:
      - condition: "state"
        entity_id: "binary_sensor.presence_armed"
        state: "on"
      - condition: "template"
        value_template: "{{ entity_id != '' }}"

    action:
      - action: "notify.send_message"
        target:
          entity_id: "notify.intrusion_log"
        data:
          message: "({{ states('input_text.presence_armed_id') }}) Intrusion activity: {{ device_attr(device_id(entity_id), 'name') }} ({{ entity_id }})"
      - action: "todo.add_item"
        target:
          entity_id: "todo.intrusion_record"
        data:
          item: "{{ entity_id }}"

  - alias: "start_intrusion_alarm"
    id: "6943625e-997b-4650-b608-acb10bf3ca57"
    description: "Trigger alarm notifications when an intrusion is detected."
    use_blueprint:
      path: "alarm/start_alarm.yaml"
      input:
        <<: &alarm_input
          name: "Intrusion"
          group: "binary_sensor.intrusion_activity"
          tag: "{{ states('input_text.presence_armed_id') }}"
        actions:
          - action: "silence_{{ states('input_text.presence_armed_id') }}"
            title: "Silence"
          - action: "reset_{{ states('input_text.presence_armed_id') }}"
            title: "Reset"
        silenced:
          - condition: state
            entity_id: "input_boolean.silence_intrusion_alarm"
            state: "off"

  - alias: "clear_intrusion_alarm"
    id: "8e77137f-af56-48bd-b82c-7e5bb0ab4ff8"
    description: "Clear alarm notifications when an intrusion is no longer active."
    use_blueprint:
      path: "alarm/clear_alarm.yaml"
      input: *alarm_input

  - alias: "silence_intrusion_alarm"
    id: "65383759-a03c-4c81-9965-7154e83626fd"
    description: "Silence the home alarm audio when requested."
    initial_state: true
    mode: "single"
    max_exceeded: "silent"

    trigger:
      - platform: event
        event_type:
          - "html5_notification.clicked"
          - "mobile_app_notification_action"

    variables:
      arming_id: "{{ states('input_text.presence_armed_id') }}"

    condition:
      - condition: state
        entity_id: "binary_sensor.intrusion_activity"
        state: "on"
      - "{{ trigger.event.data.action == 'silence_' ~ arming_id }}"

    action:
      - action: input_boolean.turn_on
        target:
          entity_id: "input_boolean.silence_intrusion_alarm"
      - action: "notify.send_message"
        target:
          entity_id: "notify.intrusion_log"
        data:
          message: "({{ arming_id }}) Intrusion alarm silenced."

  - alias: "reset_intrusion_alarm"
    id: "f1d67201-6a81-4214-a528-8a5afff919c0"
    description: "Reinitialize the home alarm when requested."
    initial_state: true
    mode: "single"
    max_exceeded: "silent"

    trigger:
      - platform: event
        event_type:
          - "html5_notification.clicked"
          - "mobile_app_notification_action"

    variables:
      arming_id: "{{ states('input_text.presence_armed_id') }}"

    condition:
      - condition: state
        entity_id: "binary_sensor.intrusion_activity"
        state: "on"
      - "{{ trigger.event.data.action == 'reset_' ~ arming_id }}"

    action:
      - action: "notify.send_message"
        target:
          entity_id: "notify.intrusion_log"
        data:
          message: "({{ arming_id }}) Intrusion alarm cleared manually."
      - action: "script.initialize_alarm_states"

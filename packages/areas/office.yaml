cloud:
  google_actions:
    filter:
      include_entities:
        - "light.office"
    entity_config:
      light.office:
        room: "Office"
        name: "Office light"
        aliases:
          - "Office"

input_number:
  office_thermostat_eco_setpoint:
    name: "Office thermostat eco setpoint"
    unit_of_measurement: "°C"
    icon: "mdi:thermometer-lines"
    mode: "box"
    min: 8
    max: 18
    step: 0.5
  office_thermostat_comfort_setpoint:
    name: "Office thermostat comfort setpoint"
    unit_of_measurement: "°C"
    icon: "mdi:thermometer-lines"
    mode: "box"
    min: 15
    max: 25
    step: 0.5

input_select:
  office_thermostat_mode:
    name: "Office thermostat mode"
    icon: mdi:home-thermometer-outline
    options: ["Comfort", "Eco", "Manual"]

light:
  - platform: group
    name: "Office lights"
    entities:
      - light.office

sensor:
  - platform: template
    sensors:
      office_temperature:
        friendly_name: "Office temperature"
        device_class: "temperature"
        unit_of_measurement: "°C"
        value_template: "{{ states('sensor.office_thermostat_temperature') | round(1) }}"

automation:
  - alias: "office_update_setpoint"
    hide_entity: True
    initial_state: True
    trigger:
      - platform: state
        entity_id: "input_select.office_thermostat_mode"
    condition:
      - condition: template
        value_template: |
          {{ (trigger.from_state is none or trigger.from_state.state != trigger.to_state.state)
            and not trigger.to_state.state == 'Manual' }}
    action:
      - service: "climate.set_temperature"
        data_template:
          entity_id: "climate.office_thermostat"
          temperature: "{{ states('input_number.office_thermostat_' + (states('input_select.office_thermostat_mode') | lower) + '_setpoint') }}"

  - alias: "office_update_thermostat_mode"
    hide_entity: True
    initial_state: True
    trigger:
      - platform: state
        entity_id: "climate.office_thermostat"
    condition:
      - condition: template
        value_template: |
          {{ (trigger.from_state is none or trigger.from_state.attributes.temperature != trigger.to_state.attributes.temperature)
            and trigger.to_state.attributes.preset_mode == 'none' }}
    action:
      - service: "input_select.select_option"
        data_template:
          entity_id: "input_select.office_thermostat_mode"
          option: |
            {% set ns = namespace(mode='Manual', found=False) -%}
            {% for mode in state_attr('input_select.office_thermostat_mode', 'options') -%}
            {% if not ns.found and trigger.to_state.attributes.temperature | float == states('input_number.office_thermostat_' + (mode | lower) + '_setpoint') | float -%}
            {% set ns.mode = mode -%}
            {% set ns.found = True %}
            {%- endif %}
            {%- endfor -%}
            {{ ns.mode }}

homeassistant:
  customize:
    light.side_porch:
      friendly_name: "Front porch light"
    light.front_porch:
      friendly_name: "Side porch light"
    light.shed:
      friendly_name: "Shed door light"

cloud:
  google_actions:
    filter:
      include_entities:
        - "light.side_porch"
        - "light.front_porch"
        - "light.shed"
    entity_config:
      light.side_porch:
        room: "Outdoor"
        name: "Side porch light"
        aliases:
          - "Side porch"
          - "Porch"
          - "Side"
      light.front_porch:
        room: "Outdoor"
        name: "Front porch light"
        aliases:
          - "Front porch"
          - "Front"
      light.shed:
        room: "Outdoor"
        name: "Shed light"
        aliases:
          - "Shed"
          - "Garage"

light:
  - platform: group
    name: "Outdoor lights"
    entities:
      - light.side_porch
      - light.front_porch
      - light.shed

  - platform: switch
    name: side_porch
    entity_id: "switch.side_porch_light"
  - platform: switch
    name: front_porch
    entity_id: "switch.front_porch_light"
  - platform: switch
    name: shed
    entity_id: "switch.shed_light"

sensor:
  - platform: template
    sensors:
      outdoor_humidity:
        unique_id: "sensor.outdoor_humidity"
        friendly_name: "Outdoor humidity"
        device_class: "humidity"
        unit_of_measurement: "%"
        value_template: "{{ states('sensor.weather_quebec_humidity') }}"
        availability_template: "{{ not is_state('sensor.weather_quebec_humidity', 'unavailable') }}"
      outdoor_temperature:
        unique_id: "sensor.outdoor_temperature"
        friendly_name: "Outdoor temperature"
        device_class: "temperature"
        unit_of_measurement: "Â°C"
        value_template: "{{ states('sensor.weather_quebec_temperature') }}"
        availability_template: "{{ not is_state('sensor.weather_quebec_temperature', 'unavailable') }}"
      weather_summary:
        unique_id: "sensor.weather_summary"
        friendly_name: "Weather summary"
        value_template: "{{ states('sensor.weather_quebec_forecast') }}"
        icon_template: >
          {% set state_icon = states('weather.quebec')
            | replace('partlycloudy', 'partly-cloudy')
            | replace('unknown', '')
            | replace('undefined','')
            | replace('exceptional', '') %}
          mdi:{% if state_icon %}weather-{{ state_icon }}{% else %}help-circle{% endif %}
        availability_template: "{{ not is_state('sensor.weather_quebec_forecast', 'unavailable') }}"

automation:
  - alias: "outdoor_switches_double_tap"
    initial_state: true
    mode: "queued"
    variables:
      entity_id: "light.outdoor_lights"
    trigger:
      - platform: event
        event_type: "zwave.scene_activated"
        event_data:
          entity_id: "zwave.front_porch_light_switch"
          scene_data: 7860
      - platform: event
        event_type: "zwave.scene_activated"
        event_data:
          entity_id: "zwave.side_porch_light_switch"
          scene_data: 7860
      - platform: event
        event_type: "zwave.scene_activated"
        event_data:
          entity_id: "zwave.shed_outdoor_light_switch"
          scene_data: 7860
    action:
      - choose:
          - conditions: "{{ trigger.event.data.scene_id | int == 1 }}"
            sequence:
              - service: light.turn_on
                data:
                  entity_id: "{{ entity_id }}"
          - conditions: "{{ trigger.event.data.scene_id | int == 2 }}"
            sequence:
              - service: light.turn_off
                data:
                  entity_id: "{{ entity_id }}"

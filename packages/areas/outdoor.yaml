homeassistant:
  customize:
    sensor.outdoor_humidity:
      friendly_name: "Outdoor humidity"
    sensor.outdoor_temperature:
      friendly_name: "Outdoor temperature"
    sensor.weather_summary:
      friendly_name: "Weather summary"

cloud:
  google_actions:
    filter:
      include_entities:
        - "light.front_porch"
        - "light.backyard_string"
        - "light.backyard_soffit_spots"
        - "light.shed"
        - "light.shed_outdoor"
        - "light.side_porch_sconce"
    entity_config:
      light.shed_outdoor:
        aliases:
          - "Shed door light"
          - "Garage door light"

light:
  - platform: group
    unique_id: "outdoor_lights"
    name: "Outdoor lights"
    entities:
      - "light.backyard_soffit_spots"
      - "light.backyard_string"
      - "light.front_porch"
      - "light.shed_outdoor"
      - "light.side_porch_sconce"

template:
  - sensor:
      - unique_id: "sensor.outdoor_humidity"
        name: "outdoor_humidity"
        device_class: "humidity"
        unit_of_measurement: "%"
        state: "{{ states('sensor.weather_quebec_humidity') }}"
        availability: "{{ not is_state('sensor.weather_quebec_humidity', 'unavailable') }}"
      - unique_id: "sensor.outdoor_temperature"
        name: "outdoor_temperature"
        device_class: "temperature"
        unit_of_measurement: "Â°C"
        state: "{{ states('sensor.weather_quebec_temperature') }}"
        availability: "{{ not is_state('sensor.weather_quebec_temperature', 'unavailable') }}"
      - unique_id: "sensor.weather_summary"
        name: "weather_summary"
        state: "{{ states('sensor.weather_quebec_forecast') }}"
        icon: >
          {% set state_icon = states('weather.quebec')
            | replace('partlycloudy', 'partly-cloudy')
            | replace('unknown', '')
            | replace('undefined','')
            | replace('exceptional', '') %}
          mdi:{{ (state_icon | length > 0) | iif('weather-' ~ state_icon, 'help-circle') }}
        availability: "{{ not is_state('sensor.weather_quebec_forecast', 'unavailable') }}"

automation:
  - id: "abe8645a-9131-4822-8877-631f62b3e716"
    alias: "front_porch_light_switch_zwave_scenes"
    use_blueprint:
      path: "zwave/paddle_scenes.yaml"
      input:
        on_entity_id: "event.front_porch_light_switch_on_pressed"
        off_entity_id: "event.front_porch_light_switch_off_pressed"

        <<: &all_outdoor_on_off
          tap_on_3x:
            - service: "light.turn_on"
              data:
                entity_id: "light.outdoor_lights"
          tap_off_3x:
            - service: "light.turn_off"
              data:
                entity_id: "light.outdoor_lights"

  - id: "bc0ae565-8522-4e0c-b0d3-f0e46b109f04"
    alias: "side_porch_sconce_switch_zwave_scenes"
    use_blueprint:
      path: "zwave/paddle_scenes.yaml"
      input:
        on_entity_id: "event.side_porch_sconce_dimmer_on_pressed"
        off_entity_id: "event.side_porch_sconce_dimmer_off_pressed"
        favorite_entity_id: "event.side_porch_sconce_dimmer_favorite_pressed"

        <<: *all_outdoor_on_off

        tap_on_2x:
          - service: "light.turn_on"
            target:
              entity_id: "light.shed_outdoor"
        tap_off_2x:
          - service: "light.turn_off"
            target:
              entity_id: "light.shed_outdoor"

  - id: "c0215e45-73ab-4e4a-af7f-f5ea1b7cff00"
    alias: "backyard_soffit_spots_switch_zwave_scenes"
    use_blueprint:
      path: "zwave/paddle_scenes.yaml"
      input:
        on_entity_id: "event.backyard_soffit_spots_dimmer_on_pressed"
        off_entity_id: "event.backyard_soffit_spots_dimmer_off_pressed"
        favorite_entity_id: "event.backyard_soffit_spots_dimmer_favorite_pressed"

        <<: *all_outdoor_on_off

        tap_on_2x:
          - service: "light.turn_on"
            target:
              entity_id: "light.backyard_string"
        tap_off_2x:
          - service: "light.turn_off"
            target:
              entity_id: "light.backyard_string"

  - id: "a503f433-fcce-4763-9930-a2c7b7679426"
    alias: "shed_outdoor_light_switch_zwave_scenes"
    use_blueprint:
      path: "zwave/paddle_scenes.yaml"
      input:
        on_entity_id: "event.shed_outdoor_light_switch_on_pressed"
        off_entity_id: "event.shed_outdoor_light_switch_off_pressed"

        <<: *all_outdoor_on_off

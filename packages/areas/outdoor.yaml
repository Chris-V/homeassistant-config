homeassistant:
  customize:
    light.side_porch:
      friendly_name: "Front porch light"
    light.front_porch:
      friendly_name: "Side porch light"
    light.shed_outdoor:
      friendly_name: "Shed outdoor light"

cloud:
  google_actions:
    filter:
      include_entities:
        - "light.side_porch"
        - "light.front_porch"
        - "light.shed_outdoor"
    entity_config:
      light.side_porch:
        room: "Outdoor"
        name: "Side porch light"
        aliases:
          - "Side porch"
          - "Porch"
          - "Side"
      light.front_porch:
        room: "Outdoor"
        name: "Front porch light"
        aliases:
          - "Front porch"
          - "Front"
      light.shed_outdoor:
        room: "Outdoor"
        name: "Shed outdoor light"
        aliases:
          - "Shed outdoor"
          - "Shed door light"
          - "Shed door"
          - "Garage door"
          - "Garage door light"

light:
  - platform: group
    name: "Outdoor lights"
    entities:
      - light.side_porch
      - light.front_porch
      - light.shed_outdoor

  - platform: switch
    name: side_porch
    entity_id: "switch.side_porch_light"
  - platform: switch
    name: front_porch
    entity_id: "switch.front_porch_light"
  - platform: switch
    name: shed_outdoor
    entity_id: "switch.shed_outdoor_light"

template:
  sensor:
    - unique_id: "sensor.outdoor_humidity"
      name: "outdoor_humidity"
      device_class: "humidity"
      unit_of_measurement: "%"
      state: "{{ states('sensor.weather_quebec_humidity') }}"
      availability: "{{ not is_state('sensor.weather_quebec_humidity', 'unavailable') }}"
      attributes:
        friendly_name: "Outdoor humidity"
    - unique_id: "sensor.outdoor_temperature"
      name: "outdoor_temperature"
      device_class: "temperature"
      unit_of_measurement: "Â°C"
      state: "{{ states('sensor.weather_quebec_temperature') }}"
      availability: "{{ not is_state('sensor.weather_quebec_temperature', 'unavailable') }}"
      attributes:
        friendly_name: "Outdoor temperature"
    - unique_id: "sensor.weather_summary"
      name: "weather_summary"
      state: "{{ states('sensor.weather_quebec_forecast') }}"
      icon: >
        {% set state_icon = states('weather.quebec')
          | replace('partlycloudy', 'partly-cloudy')
          | replace('unknown', '')
          | replace('undefined','')
          | replace('exceptional', '') %}
        mdi:{% if state_icon %}weather-{{ state_icon }}{% else %}help-circle{% endif %}
      availability: "{{ not is_state('sensor.weather_quebec_forecast', 'unavailable') }}"
      attributes:
        friendly_name: "Weather summary"

automation:
  - id: "abe8645a-9131-4822-8877-631f62b3e716"
    alias: "front_porch_light_switch_zwave_scenes"
    use_blueprint:
      path: "zwave/homeseer_100_series_scene_control.yaml"
      input:
        node_id: 6

        <<: &tap_2x
          tap_on_2x:
            - service: light.turn_on
              data:
                entity_id: "light.outdoor_lights"
          tap_off_2x:
            - service: light.turn_off
              data:
                entity_id: "light.outdoor_lights"

  - id: "bc0ae565-8522-4e0c-b0d3-f0e46b109f04"
    alias: "side_porch_light_switch_zwave_scenes"
    use_blueprint:
      path: "zwave/homeseer_100_series_scene_control.yaml"
      input:
        node_id: 2
        <<: *tap_2x

  - id: "a503f433-fcce-4763-9930-a2c7b7679426"
    alias: "shed_outdoor_light_switch_zwave_scenes"
    use_blueprint:
      path: "zwave/homeseer_100_series_scene_control.yaml"
      input:
        node_id: 5
        <<: *tap_2x

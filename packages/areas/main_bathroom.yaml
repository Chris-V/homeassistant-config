homeassistant:
  customize:
    sensor.main_bathroom_multisensor_battery:
      battery_type: "CR123A"
      battery_warning_level: 40
    light.main_bathroom_vanity:
      friendly_name: "Main bathroom vanity light"

cloud:
  google_actions:
    filter:
      include_entities:
        - "light.main_bathroom_spots"
        - "light.main_bathroom_vanity"
        - "fan.main_bathroom"
    entity_config:
      light.main_bathroom_spots:
        room: "Main bathroom"
        name: "Bathroom spots"
        aliases:
          - "Bathroom light"
          - "Main bathroom light"
          - "Main bathroom spots"
      light.main_bathroom_vanity:
        room: "Main bathroom"
        name: "Vanity light"
        aliases:
          - "Vanity"
          - "Bathroom vanity light"
          - "Main bathroom vanity light"
      fan.main_bathroom:
        room: "Main bathroom"
        name: "Bathroom fan"
        aliases:
          - "Main bathroom fan"

binary_sensor:
  - platform: template
    sensors:
      main_bathroom_door:
        unique_id: "binary_sensor.main_bathroom_door"
        friendly_name: "Main bathroom door"
        device_class: "door"
        value_template: false
      main_bathroom_motion:
        unique_id: "binary_sensor.main_bathroom_motion"
        friendly_name: "Main bathroom motion"
        device_class: "motion"
        value_template: "{{ is_state('sensor.main_bathroom_multisensor_burglar', '8') }}"

sensor:
  - platform: template
    sensors:
      main_bathroom_humidity:
        unique_id: "sensor.main_bathroom_humidity"
        friendly_name: "Main bathroom humidity"
        device_class: "humidity"
        unit_of_measurement: "%"
        value_template: "{{ states('sensor.main_bathroom_multisensor_relative_humidity') | round }}"

      main_bathroom_temperature:
        unique_id: "sensor.main_bathroom_temperature"
        friendly_name: "Main bathroom temperature"
        device_class: "temperature"
        unit_of_measurement: "Â°C"
        value_template: "{{ states('sensor.main_bathroom_multisensor_temperature') | round(1) }}"

fan:
  - platform: template
    fans:
      main_bathroom:
        unique_id: "fan.main_bathroom"
        friendly_name: "Main bathroom fan"
        value_template: "{% if is_state('switch.main_bathroom_fan', 'on') %}on{% else %}off{% endif %}"
        availability_template: "{{ not is_state('switch.main_bathroom_fan', 'unavailable') }}"
        speed_template: "Normal"
        speeds:
          - "Normal"
        turn_on:
          service: "switch.turn_on"
          data:
            entity_id: "switch.main_bathroom_fan"
        turn_off:
          service: "switch.turn_off"
          data:
            entity_id: "switch.main_bathroom_fan"

light:
  - platform: group
    name: "Main bathroom lights"
    entities:
      - light.main_bathroom_spots
      - light.main_bathroom_vanity

  - platform: switch
    name: main_bathroom_vanity
    entity_id: "switch.main_bathroom_vanity_light"

automation:
  - alias: "main_bathroom_auto_fan"
    initial_state: true
    mode: "restart"

    trigger:
      - platform: state
        entity_id: "sensor.main_bathroom_humidity"
      - platform: state
        entity_id: "sensor.outdoor_humidity"
      - platform: state
        entity_id: "fan.main_bathroom"
        for: &fan_cycle_time
          minutes: 30

    action:
      - choose:
          - conditions:
              - condition: numeric_state
                entity_id: "sensor.main_bathroom_humidity"
                value_template: >-
                  {{ [65 + 10, states('sensor.outdoor_humidity') | int] | max
                      - state.state | int }}
                below: 11
              - condition: state
                entity_id: "fan.main_bathroom"
                state: "off"
                for: *fan_cycle_time
            sequence:
              - service: fan.turn_on
                data:
                  entity_id: "fan.main_bathroom"

          - conditions:
              - condition: numeric_state
                entity_id: "sensor.main_bathroom_humidity"
                value_template: >-
                  {{ state.state | int
                      - [60 - 5, states('sensor.outdoor_humidity') | int] | max }}
                below: 6
              - condition: state
                entity_id: "fan.main_bathroom"
                state: "on"
                for: *fan_cycle_time
            sequence:
              - service: fan.turn_off
                data:
                  entity_id: "fan.main_bathroom"

  - alias: "main_bathroom_auto_lights"
    initial_state: true
    mode: "restart"
    trigger:
      - platform: state
        entity_id: "binary_sensor.main_bathroom_motion"
        to: "on"
    action:
      - choose:
          - conditions:
              - condition: state
                entity_id: "binary_sensor.main_bathroom_door"
                state: "on"
              - condition: state
                entity_id: "light.main_bathroom_lights"
                state: "off"
            sequence:
              - service: light.turn_on
                data:
                  entity_id: "light.main_bathroom_spots"
                  brightness_pct: >-
                    {% set time = now().strftime('%H%M') | int %}
                    {%- if time <= 600 -%} 5
                    {%- elif time >= 900 and time <= 1800 -%} 85
                    {%- else -%} 50
                    {%- endif -%}

      - wait_for_trigger:
          - platform: template
            value_template: >-
              {{
                false
                  and is_state('binary_sensor.main_bathroom_motion', 'off')
                  and is_state('binary_sensor.main_bathroom_door', 'on')
              }}
            for: 120

      - service: light.turn_off
        data:
          entity_id: "light.main_bathroom_lights"

  # Double tap fan switch will turn fan on/off
  - alias: "main_bathroom_fan_double_tap"
    initial_state: true
    mode: "queued"
    trigger:
      - platform: event
        event_type: "zwave.scene_activated"
        event_data:
          entity_id: "zwave.main_bathroom_fan_switch"
          scene_data: 7860
    variables:
      entity_id: "fan.main_bathroom"
    action:
      - choose:
          - conditions: "{{ trigger.event.data.scene_id | int == 1 }}"
            sequence:
              - service: light.turn_on
                data:
                  entity_id: "{{ entity_id }}"
          - conditions: "{{ trigger.event.data.scene_id | int == 2 }}"
            sequence:
              - service: light.turn_off
                data:
                  entity_id: "{{ entity_id }}"

  # Double tap vanity switch will turn vanity light on/off
  - alias: "main_bathroom_vanity_double_tap"
    initial_state: true
    mode: "queued"
    trigger:
      - platform: event
        event_type: "zwave.scene_activated"
        event_data:
          entity_id: "zwave.main_bathroom_vanity_light_switch"
          scene_data: 7860
    variables:
      entity_id: "light.main_bathroom_vanity"
    action:
      - choose:
          - conditions: "{{ trigger.event.data.scene_id | int == 1 }}"
            sequence:
              - service: light.turn_on
                data:
                  entity_id: "{{ entity_id }}"
          - conditions: "{{ trigger.event.data.scene_id | int == 2 }}"
            sequence:
              - service: light.turn_off
                data:
                  entity_id: "{{ entity_id }}"

  # Double tap spots switch will turn spots on/off
  - alias: "main_bathroom_spots_double_tap"
    initial_state: true
    mode: "queued"
    trigger:
      - platform: event
        event_type: "zwave.scene_activated"
        event_data:
          entity_id: "zwave.main_bathroom_light_dimmer"
          scene_data: 7860
    variables:
      entity_id: "light.main_bathroom_spots"
    action:
      - choose:
          - conditions: "{{ trigger.event.data.scene_id | int == 1 }}"
            sequence:
              - service: light.turn_on
                data:
                  entity_id: "{{ entity_id }}"
          - conditions: "{{ trigger.event.data.scene_id | int == 2 }}"
            sequence:
              - service: light.turn_off
                data:
                  entity_id: "{{ entity_id }}"

  # Triple tap any light switch will turn bathroom lights on/off
  - alias: "main_bathroom_lights_triple_tap"
    initial_state: true
    mode: "queued"
    trigger:
      - platform: event
        event_type: "zwave.scene_activated"
        event_data:
          entity_id: "zwave.main_bathroom_light_dimmer"
          scene_data: 7920
      - platform: event
        event_type: "zwave.scene_activated"
        event_data:
          entity_id: "zwave.main_bathroom_vanity_light_switch"
          scene_data: 7920
    variables:
      entity_id: "light.main_bathroom_lights"
    action:
      - choose:
          - conditions: "{{ trigger.event.data.scene_id | int == 1 }}"
            sequence:
              - service: light.turn_on
                data:
                  entity_id: "{{ entity_id }}"
          - conditions: "{{ trigger.event.data.scene_id | int == 2 }}"
            sequence:
              - service: light.turn_off
                data:
                  entity_id: "{{ entity_id }}"

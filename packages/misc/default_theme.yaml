homeassistant:
  customize:
    binary_sensor.use_alarm_theme:
      friendly_name: "Use alarm theme"
    binary_sensor.use_dark_theme:
      friendly_name: "Use dark theme"

template:
  - binary_sensor:
      - unique_id: "d15e4446-af81-4000-aed1-98a0fe3c8702"
        name: "use_alarm_theme"
        icon: "mdi:alarm-light"
        state: >-
          {{
            (
              expand(
                'binary_sensor.all_leaks',
                'binary_sensor.intrusion',
                'binary_sensor.kitchen_door_lock_jammed',
              )
                | selectattr('state', '==', 'on')
                | first is defined
            ) or (
              expand(
                'switch.main_water_shut_off_valve',
              )
                | selectattr('state', '==', 'off')
                | first is defined
            )
          }}
      - unique_id: "db252c59-897b-4bd9-94a8-d5d17f48ed68"
        name: "use_dark_theme"
        icon: "mdi:theme-light-dark"
        state: "{{ state_attr('sun.sun', 'elevation') | float < -3 }}"

input_boolean:
  automatic_night_theme:
    name: "Automatic night theme"
    initial: true
    icon: "mdi:theme-light-dark"

input_select:
  default_theme:
    name: "Default theme"
    icon: "mdi:palette"
    options: &themes
      - "default"
      - "Google Light Theme"
      - "Google Dark Theme"
      - "clear"
      - "clear-dark"

  day_theme:
    name: "Day theme"
    icon: "mdi:weather-sunset-up"
    options: *themes

  night_theme:
    name: "Night theme"
    icon: "mdi:weather-sunset-down"
    options: *themes

automation:
  - id: "1ff64444-5414-49d5-b314-b0a3a82075c5"
    alias: update_backend_theme
    initial_state: true
    mode: "queued"
    trigger:
      - platform: state
        entity_id:
          - "input_select.default_theme"
          - "binary_sensor.use_alarm_theme"
          - "binary_sensor.winter_credit_peak_event"
    action:
      - service: frontend.set_theme
        data:
          name: >-
            {%
              set mode = 'dark'
                if is_state('binary_sensor.use_dark_theme', 'on')
                else 'light'
            -%}
            {% if is_state('binary_sensor.use_alarm_theme', 'on') -%}
              ios-{{ mode }}-mode-red
            {%- elif is_state('binary_sensor.winter_credit_peak_event', 'on') -%}
              ios-{{ mode }}-mode-light-blue
            {%- else -%}
              {{ states('input_select.default_theme') | default('default', True) -}}
            {% endif %}

  - id: "a87a26c7-b1d4-4080-842b-4ee8a6e5b6f5"
    alias: update_default_theme
    initial_state: true
    mode: "restart"
    trigger:
      - platform: state
        entity_id:
          - "binary_sensor.use_dark_theme"
          - "input_boolean.automatic_night_theme"
          - "input_select.day_theme"
          - "input_select.night_theme"
      - platform: homeassistant
        event: "start"
    condition:
      - condition: state
        entity_id: "input_boolean.automatic_night_theme"
        state: "on"
    action:
      - service: input_select.select_option
        data:
          entity_id: "input_select.default_theme"
          option: >-
            {{
              states(
                'input_select.'
                ~ ('night' if is_state('binary_sensor.use_dark_theme', 'on') else 'day' )
                ~ '_theme'
              ) | default('default')
            }}
